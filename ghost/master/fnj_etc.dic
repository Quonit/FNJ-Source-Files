//Friday Night Jammin'
//OnFileDrop2 MOVED TO FNJ_MUSIC.DIC

Select.SetWallpaper_0
{
	"\![set,wallpaper,%(Wallpaperfile),center]\1\s[10]The image is centered.\e"
	if beeptranslation == "off"
	{
	"\![set,wallpaper,%(Wallpaperfile),center]\0\s[0]%(beep)%(beep)!\e"
	}
}
Select.SetWallpaper_1
{
	"\![set,wallpaper,%(Wallpaperfile),tile]\1\s[10]The image is tiled.\e"
	if beeptranslation == "off"
	{
	"\![set,wallpaper,%(Wallpaperfile),tile]\0\s[0]%(beep)%(beep)!\e"
	}
}
Select.SetWallpaper_2
{
	"\![set,wallpaper,%(Wallpaperfile),stretch]\1\s[10]The image is stretched.\e"
	if beeptranslation == "off"
	{
	"\![set,wallpaper,%(Wallpaperfile),stretch]\0\s[0]%(beep)%(beep)!\e"
	}
}
Select.SetWallpaper_Cancel
{
	"\1\s[10]I won't set it then!\e"
}

OnInstallBegin
{
	if beeptranslation == "on"
	{
	"\0\s[13]What's this?\w8\1\s[10]It looks like a new ghost!\w8 How exciting!\e"
	}
	else
	{
	"\0\s[13]%(beep) %(beep)?\w8\1\s[10]It looks like a new ghost!\w8 How exciting!\e"
	}
	"\1\s[604]A new ghost!!\w8\n\nI'll be sure to install it for you.\e"
}

OnInstallComplete
{
	"\0"
 	--
	if reference0 == "shell"
 	{	
		if reference1 == "Hypothetical Shell that doesn't actually exist" 
		{
		"\s[0]We have installed Hypothetical Shell.\w8\1\s[10]Truncated for space.\e"
		}
		elseif reference1 == "Another totally real shell wow"
		{
		"\s[0]We have installed another totally real shell.\e"
		}
		else
		{
		"\s[0]We've installed a new shell.\w8\1\s[10]It's called  %(reference1).\e"
		}
 	}
	elseif reference0 == "ghost"
 	{
		"\s[0]We've installed a new Ghost.\w8\1\s[10]It's called %(reference1).\e"
 	}
	elseif reference0 == "balloon"
 	{
		"\s[0]We've installed a new balloon.\w8\1\s[10]It's called %(reference1).\e"
 	}
	elseif reference0 == "plugin"
 	{
		"\s[0]We've installed a plug-in.\w8\1\s[10]It's called %(reference1).\e"
 	}
	elseif reference0 == "calendar skin"
	{
		"\s[0]We've installed a calendar skin.\w8\1\s[10]It's called %(reference1)."
	}
	else
	{
		"\s[0]We installed %(reference1)."
	}
}

OnInstallFailure
 {
	"\1\s[601]It doesn't look like I can install it\w2.\w2.\w2.\n\n[half]\w5"
	--
	if reference0 == "unsupported"
	{
	"\1\s[601]It looks like the file isn't supported.\e"
	}	
	elseif reference0 == "extraction"
	{
	"\1\s[601]The file could not be extracted properly.\e"
	}
 }

OnInstallRefuse
 {
	"\0\s[602]It's possible this file might be for %(reference0) instead?\e"
 }

OnVanishSelecting
{
	"\1\s[10]Deciding to uninstall or not?\e"
}

OnVanishSelected
{
	"\1\s[10]Goodbye %(username)!\w8\0\s[0]%(beep)!\w9\w9\e"
}

OnVanishCancel
{
	"\1\s[10]The user has decided not to uninstall us after all.\e"
}

OnVanishButtonHold
{
	"\1\s[10]This dialogue displays when the user double clicks on the balloon when we're saying we're going to uninstall ourselves.\e"
}

OnVanished
{
	"\0\s[0]\1\s[10]%(reference0) has been uninstalled.\w8\0\s[0]Harsh.\e"
}

OnBIFFBegin
{
	"\1\s[10]Cehcking the email!\e"
}

OnBIFFComplete
{
	if reference0 == 0
 	{
 	"\1\s[10]There is no new mail.\e"
	}
	elseif reference0 == 1
 	{
 	"\1\s[10]There is one new email.\e"
	}
	elseif reference0 > 1 && reference0 < 11
	{
	"\1\s[10]There are %(reference0) emails.\e"
	}
	elseif reference0 > 100
	{
	"\1\s[10]There are %(reference0) emails unread.\w8\n\nSo many!\e"
	}
 	else
	{
	"\1\s[10]There are %(reference0) emails.\e"
 	}
}

OnBIFFFailure
 {
	if reference0 == "timeout"
 	{
 		"\1\s[607]The connection has timed out.\e"
	}
 	elseif reference0 == "kick"
	{
		"\1\s[607]I can't access the account.\e"
 	}
	elseif reference0 == "defect"
 	{
 		"\1\s[607]The email account was not set up properly.\w8\n\nIt can be reset at the POP menu.\w8\![open,configurationdialog]\e"
	}
 	else
	{
		"\1\s[607]I can't connect to the account.w8\n\nThe error returned is '%(reference[0])'.\e"
 	}
}

OnUpdateBegin
{
	if beeptranslation == "on"
	{
	"\1\s[10]Starting the update process!\w8\0\s[13]Wait,\w4 we got an update??\e"
	"\0\s[0]Huh!\w4 I didn't think we'd be updated after release!\e"
	"\0\s[13]Checking for updates.\w8\1\s[604]I wonder what new was added!\e"
	}
	else
	{
	"\0\s[13]%(beep)%(beep)?"
	"\1\s[10]I wonder what the new update is!\w8\0\s[13]%(beep)%(beep)?\e"
	}
}

OnUpdateReady
{
	reference0++
    "\1\s[604]There are %(reference0) new files!\w8\e"
}

OnUpdateComplete
{
	if reference0 == "none"
 	{
		"\1\s[607]Aw,\w4 apparently there wasn't anything new after all\w2.\w2.\w2.\e"
	}
 	else
	{
		"\1\s[10]Update successful!\e"
 	}
}

OnUpdateFailure
{
	if reference0 == "timeout"
 	{
 		"\1\s[10]The update connection has timed out.\e"
	}
 	elseif reference0 == "md5 miss"
	{
		"\1\s[10]The MD5 hash of the files don't match.\e"
 	}
	else
 	{
 		"\1\s[10]The update could not be completed.\w8 The error is '%(reference0)'.\e"
	}
}
 
OnUpdate.OnDownloadBegin
{
 	if "aitalk" _in_ reference0 
 	{
 		"\0\s[0]...\e"
 	}
 	else
 	{
	"\1\s[10]...\e"
	}
}
 
OnUpdate.OnMD5CompareBegin
{
	"\1\s[10]Checking the MD5 value!\e"
}

OnUpdate.OnMD5CompareComplete
{
	"\1\s[10]MD5 check good.\e"
}

OnUpdate.OnMD5CompareFailure
{
	"\1\s[10]The MD5 values don't match.\w8\e"
}
 
OnHeadlinesenseBegin
{
	"\1\s[10]You've selected %(reference0).\e"
}

OnHeadlinesense.OnFind
{
 	if reference2 == "First" || reference2 == "First and Last"
	{
		"\1\b2\s[10]%(reference0):"
 	}
	elseif reference2 == "Next"
 	{
 		"\1\b2\s[10]%(reference0):"
	}
 	elseif reference2 == "Last"
	{
		"\1\b2\s[10]%(reference0):"
 	}
	--
	"\n\n%reference3\n"
 	--
 	if reference2 == "First" || reference2 == "Next"
	{
		"\![*]\q[Next,] - \![*]\q[Stop,Headline_Cancel]\e"
 	}
	else
 	{
 		"\![*]\q[Stop,Headline_Cancel]\e"
 	}
}
Select.Headline_Cancel
{
	"\1\s[10]Headline viewing complete.\e"
}

OnHeadlinesenseComplete
 {
	"\1\s[10]No update. %(reference0).\e"
 }
 
OnHeadlinesenseFailure
  {
	"\1\s[10]The feed can't updated because \w8\0\s[0]\n\n[half]" 
 	--
	if reference0 == "can't download"
 	{
		"it can't be downloaded."
 	}
	elseif reference0 == "can't analyze"
 	{
		"it can't be analyzed."
 	}
	else
 	{
		"\w2.\w2.\w2.I don't know."
 	}
	--
 	"\e"
}

OnUpdatedataCreating
{
	"\1\s[10]Creating the updates2.dau file.\e"
}

OnUpdatedataCreated
{
	"\1\s[10]Successfully created updates2.dau.\e"
}

OnNarCreating
{
	if beeptranslation == "on"
	{
	"\1\s[10]Creating the .nar file!\w8\0\s[13]Is this like having a baby?\e"
	}
	"\1\s[10]Creating the .nar file.\e"
}

OnNarCreated
{
	"\1\s[10]Successfully created '%(reference0)'.\e"
}

OnSNTPBegin
{
	"\1\s[10]Connecting to %(reference0).\e"
}

OnSNTPCompare
{
 	"Retrieved Time: %reference1[1]/%reference1[2]/%reference1[0] %reference1[3]:%reference1[4]:%reference1[5]\w2\n/
	Your Time: %reference2[1]/%reference2[2]/%reference2[0] %reference2[3]:%reference2[4]:%reference2[5]\w2\n/
 	\n"
	--
 	if reference3 == 0
	{
 		"\1\s[10]Your clock is accurate!\e"
	}
 	else
	{
 		"\0\s[0]Your clock doesn't match.\w6\nShould we fix it?\n\n[half]/
		\![*]\q[Fix it,OnSNTPEXECUTE]\n/
 		\![*]\q[Leave it alone,OnSNTPCANCEL]\e"
	}
}
OnSNTPEXECUTE
{
	"\1\s[10]The clock has been fixed.\6\e"
}
OnSNTPCANCEL
{
	"\1\s[10]The clock will stay the same!\e"
}
OnSNTPFailure
{
	"\1\s[10]Something went wrong so I couldn't change it\w2.\w2.\w2.\e"
}

OnDisplayChange
{
	displaybpp    = reference0
 	displaywidth  = reference1
	displayheight = reference2
}

OnScreenSaverStart
{
	"\0\s[3]%(beep)!!!\e"
}

OnScreenSaverEnd
{
	"\1\s[10]The screensaver is gone!\e"
}

OnApplicationBoot
{
	"\1\s[10]%(reference0) just started.\e"
}
 
OnApplicationClose
{
	"\1\s[10]%(reference0) has closed.\e"
}

OnApplicationFileOpen
{
	"\1\s[10]Opening %(reference1).\e"
}

OnBatteryLow
{
	"\1\s[10]The laptop's battery is low. \w8There is %(reference0) power left.\e"
}
 
OnBatteryCritical
{
	"\1\s[10]The laptop's battery is critically low.\e"
}
 
OnShellScaling
{
	if reference0 >= 150
	{
		"\0\s[0]%(beep)!\e"
	}
	elseif reference0 == 100
	{
		"\0\s[0]%(beep)!\e"
	}
	elseif reference0 == 50
	{
		"\0\s[0]%(beep)!\e"
	}
}